 version: 2

 references:
   install_docker: &install_docker
     run:
        name: Install Docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin

 jobs:
   
   test:
     docker:
       - image: circleci/cci-demo-docker-primary:0.0.2
     steps:
       - checkout
       - setup_remote_docker:   #see: https://circleci.com/docs/2.0/building-docker-images/
          docker_layer_caching: true 
       - *install_docker
       - run: 
            name: Build arm64 Docker image
            command: | 
              docker run --rm --privileged multiarch/qemu-user-static:register #support for arm64 docker images (see: https://ownyourbits.com/2018/06/27/running-and-building-arm-docker-containers-in-x86/)
              docker run --rm rio05docker/web_server_panel:rpi3_test_${CIRCLE_BUILD_NUM}
       - save_cache:
            key: test_cache
            paths:
              - ~/project/vendor

   build:
    docker:
       - image: circleci/cci-demo-docker-primary:0.0.2
    steps:
       - checkout
       - setup_remote_docker:   #see: https://circleci.com/docs/2.0/building-docker-images/
          docker_layer_caching: true 
       - *install_docker
       - restore_cache: { keys: [ test_cache ] }
       - run: 
          name: Test container 
          command: |
            docker run --rm --privileged multiarch/qemu-user-static:register
            chmod +x scripts/circleci/build.sh
            bash scripts/circleci/build.sh

   deploy_nodes:
    docker:
      - image: circleci/cci-demo-docker-primary:0.0.2
    environment:
        NODE_HOSTNAME: raspberrypi
    steps:
      - checkout
      #- run: kubernetes/lamp/build.sh
      #- run: kubernetes/lamp/build.sh

 workflows:
    version: 2
    steps:
      jobs:
        - test: { filters: { branches: { only: [ test ] } } }
        - build: { requires: [ test ] }
        - deploy_nodes: { requires: [ build ] } #TODO: need to deploy to local k8s cluster!!


